[
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, pear, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle] ;  place all fruits on the table into the white plates.",
        "src_fs": {},
        "code_str": "# Detailed planning:\n# Step 1: Get the positions of the table and the white plates\n# Step 2: Loop through each fruit on the table\n# Step 3: Grasp the fruit with the robot arm\n# Step 4: Move the fruit to one of the white plates\n# Step 5: Release the fruit\n\n# Get the positions of the table and the white plates\ntable_pos = get_obj_pos('table')\nwhite_plate_pos = get_obj_pos('square_white_plate')\n\n# Loop through each fruit on the table\nfruits = ['apple', 'pear']\nfor fruit in fruits:\n    # Grasp the fruit with the robot arm\n    grasp_fruit_pose = parse_pose(object=fruit, action='grasp')\n    open_gripper(gripper_group)\n    move_to_pose(grasp_fruit_pose, move_group)\n    close_gripper(gripper_group)\n    attach_object(fruit)\n\n    # Move the fruit to one of the white plates\n    put_fruit_pose = parse_pose(object=fruit, action='put', position=white_plate_pos)\n    move_to_pose(put_fruit_pose, move_group)\n\n    # Release the fruit\n    open_gripper(gripper_group)\n    detach_object(fruit)",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "get_bbox",
            "get_obj_pos",
            "get_color",
            "is_obj_visible",
            "denormalize_xy",
            "get_obj_names",
            "get_corner_name",
            "get_side_name",
            "get_ee_pose",
            "parse_pose",
            "open_gripper",
            "close_gripper",
            "move_to_pose",
            "move_joints_to",
            "add_object_to_scene",
            "attach_object",
            "detach_object",
            "say",
            "move_group",
            "gripper_group",
            "parse_obj_name",
            "parse_question",
            "transform_shape_pts"
        ],
        "lvars": []
    },
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, pear, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle, white_plate, white_plate_2] ;  place all fruits on the table into the red red_plastic_bowl.",
        "src_fs": {
            "get_obj_positions_np": "def get_obj_positions_np(objects):\n    positions = []\n    for obj in objects:\n        position = get_obj_pos(obj)\n        positions.append(position)\n    return positions"
        },
        "code_str": "# Detailed planning:\n# Step 1: Get the positions of the table, red_plastic_bowl, and all the fruits\n# Step 2: Grasp each fruit and place it into the red_plastic_bowl\n\n# Get the positions of the table, red_plastic_bowl, and all the fruits\ntable_pos = get_obj_pos('table')\nbowl_pos = get_obj_pos('red_plastic_bowl')\nfruit_positions = get_obj_positions_np(['apple', 'pear'])\n\n# Loop through each fruit\nfor fruit_pos in fruit_positions:\n    # Grasp the fruit with the robot arm\n    grasp_fruit_pose = parse_pose(object='fruit', action='grasp', position=fruit_pos)\n    open_gripper(gripper_group)\n    move_to_pose(grasp_fruit_pose, move_group)\n    close_gripper(gripper_group)\n    attach_object('fruit')\n\n    # Move the fruit to the red_plastic_bowl\n    place_fruit_pose = parse_pose(object='fruit', action='place', position=bowl_pos)\n    move_to_pose(place_fruit_pose, move_group)\n\n    # Release the fruit\n    open_gripper(gripper_group)\n    detach_object('fruit')",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "get_bbox",
            "get_obj_pos",
            "get_color",
            "is_obj_visible",
            "denormalize_xy",
            "get_obj_names",
            "get_corner_name",
            "get_side_name",
            "get_ee_pose",
            "parse_pose",
            "open_gripper",
            "close_gripper",
            "move_to_pose",
            "move_joints_to",
            "add_object_to_scene",
            "attach_object",
            "detach_object",
            "say",
            "move_group",
            "gripper_group",
            "parse_obj_name",
            "parse_question",
            "transform_shape_pts",
            "get_obj_positions_np"
        ],
        "lvars": []
    },
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, pear, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle, white_plate, white_plate_2, red_plastic_bowl_2] ;  place all boxes into the top cabinet drawer.",
        "src_fs": {},
        "code_str": "# Detailed planning:\n# Step 1: Get the position of the top cabinet drawer\n# Step 2: Loop through each box and place it into the top cabinet drawer\n\n# Get the position of the top cabinet drawer\ndrawer_pos = get_obj_pos('cabinet', location='top drawer')\n\n# Loop through each box and place it into the top cabinet drawer\nfor box_name in ['white_and_pink_box', 'brown_box']:\n    # Grasp the box with the robot arm\n    grasp_box_pose = parse_pose(object=box_name, action='grasp')\n    open_gripper(gripper_group)\n    move_to_pose(grasp_box_pose, move_group)\n    close_gripper(gripper_group)\n    attach_object(box_name)\n\n    # Move the box to the top cabinet drawer\n    place_box_pose = parse_pose(object=box_name, action='place', position=drawer_pos)\n    move_to_pose(place_box_pose, move_group)\n\n    # Release the box\n    open_gripper(gripper_group)\n    detach_object(box_name)",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "get_bbox",
            "get_obj_pos",
            "get_color",
            "is_obj_visible",
            "denormalize_xy",
            "get_obj_names",
            "get_corner_name",
            "get_side_name",
            "get_ee_pose",
            "parse_pose",
            "open_gripper",
            "close_gripper",
            "move_to_pose",
            "move_joints_to",
            "add_object_to_scene",
            "attach_object",
            "detach_object",
            "say",
            "move_group",
            "gripper_group",
            "parse_obj_name",
            "parse_question",
            "transform_shape_pts",
            "get_obj_positions_np"
        ],
        "lvars": []
    },
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, pear, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle, white_plate, white_plate_2, red_plastic_bowl_2, cabinet_drawer] ;  stand up lying bottles and mugs on the table.",
        "src_fs": {
            "get_obj_positions": "def get_obj_positions(objects):\n    mug_positions = []\n    for obj in objects:\n        position = get_obj_pos(obj)\n        mug_positions.append(position)\n    return mug_positions"
        },
        "code_str": "# Detailed planning:\n# Step 1: Get the positions of the bottles and mugs on the table\n# Step 2: Stand up the bottles and mugs\n\n# Get the positions of the bottles and mugs on the table\nbottle_positions = get_obj_positions(['brown_medication_bottle', 'bleach_cleanser', 'mustard_bottle'])\nmug_positions = get_obj_positions(['white_and_pink_box', 'red_plastic_bowl', 'red_plastic_bowl_2'])\n\n# Stand up the bottles\nfor bottle_pos in bottle_positions:\n    stand_up_pose = parse_pose(object='', action='stand up', position=bottle_pos)\n    move_to_pose(stand_up_pose, move_group)\n\n# Stand up the mugs\nfor mug_pos in mug_positions:\n    stand_up_pose = parse_pose(object='', action='stand up', position=mug_pos)\n    move_to_pose(stand_up_pose, move_group)",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "get_bbox",
            "get_obj_pos",
            "get_color",
            "is_obj_visible",
            "denormalize_xy",
            "get_obj_names",
            "get_corner_name",
            "get_side_name",
            "get_ee_pose",
            "parse_pose",
            "open_gripper",
            "close_gripper",
            "move_to_pose",
            "move_joints_to",
            "add_object_to_scene",
            "attach_object",
            "detach_object",
            "say",
            "move_group",
            "gripper_group",
            "parse_obj_name",
            "parse_question",
            "transform_shape_pts",
            "get_obj_positions_np",
            "get_obj_positions"
        ],
        "lvars": []
    },
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, pear, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle, white_plate, white_plate_2, red_plastic_bowl_2, cabinet_drawer] ;  take the knife and fork from the cabinet top drawer and place them onto the plate .",
        "src_fs": {},
        "code_str": "# Detailed planning:\n# Step 1: Get the position of the knife and fork in the cabinet top drawer\n# Step 2: Grasp the knife and fork with the robot arm\n# Step 3: Move the knife and fork to the plate\n# Step 4: Release the knife and fork\n\n# Get the position of the knife and fork in the cabinet top drawer\nknife_pos = get_obj_pos('knife', location='cabinet_drawer')\nfork_pos = get_obj_pos('fork', location='cabinet_drawer')\n\n# Grasp the knife and fork with the robot arm\ngrasp_knife_pose = parse_pose(object='knife', action='grasp', location='cabinet_drawer')\ngrasp_fork_pose = parse_pose(object='fork', action='grasp', location='cabinet_drawer')\nopen_gripper(gripper_group)\nmove_to_pose(grasp_knife_pose, move_group)\nclose_gripper(gripper_group)\nattach_object('knife')\nmove_to_pose(grasp_fork_pose, move_group)\nclose_gripper(gripper_group)\nattach_object('fork')\n\n# Move the knife and fork to the plate\nknife_to_plate_pose = parse_pose(object='knife', action='put', position='plate')\nfork_to_plate_pose = parse_pose(object='fork', action='put', position='plate')\nmove_to_pose(knife_to_plate_pose, move_group)\nmove_to_pose(fork_to_plate_pose, move_group)\n\n# Release the knife and fork\nopen_gripper(gripper_group)\ndetach_object('knife')\ndetach_object('fork')",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "get_bbox",
            "get_obj_pos",
            "get_color",
            "is_obj_visible",
            "denormalize_xy",
            "get_obj_names",
            "get_corner_name",
            "get_side_name",
            "get_ee_pose",
            "parse_pose",
            "open_gripper",
            "close_gripper",
            "move_to_pose",
            "move_joints_to",
            "add_object_to_scene",
            "attach_object",
            "detach_object",
            "say",
            "move_group",
            "gripper_group",
            "parse_obj_name",
            "parse_question",
            "transform_shape_pts",
            "get_obj_positions_np",
            "get_obj_positions"
        ],
        "lvars": []
    },
    {
        "context": "",
        "query": "# objects = [table, cabinet, apple, pear, square_white_plate, white_and_pink_box, brown_box, brown_medication_bottle, bleach_cleanser, red_plastic_bowl, mustard_bottle, white_plate, white_plate_2, red_plastic_bowl_2, cabinet_drawer, knife, fork] ;  exchange the position of the apple and the pear on the table.",
        "src_fs": {},
        "code_str": "# Detailed planning:\n# Step 1: Get the positions of the apple, pear, and table\n# Step 2: Grasp the apple with the robot arm\n# Step 3: Move the apple to the position of the pear\n# Step 4: Release the apple\n# Step 5: Grasp the pear with the robot arm\n# Step 6: Move the pear to the position of the apple\n# Step 7: Release the pear\n\n# Get the positions of the apple, pear, and table\napple_pos, pear_pos, table_pos = get_obj_positions_np(['apple', 'pear', 'table'])\n\n# Grasp the apple with the robot arm\napple_grasp_pose = parse_pose(object='apple', action='grasp')\nopen_gripper(gripper_group)\nmove_to_pose(apple_grasp_pose, move_group)\nclose_gripper(gripper_group)\nattach_object('apple')\n\n# Move the apple to the position of the pear\napple_to_pear_pose = parse_pose(object='apple', action='put', position=pear_pos)\nmove_to_pose(apple_to_pear_pose, move_group)\n\n# Release the apple\nopen_gripper(gripper_group)\ndetach_object('apple')\n\n# Grasp the pear with the robot arm\npear_grasp_pose = parse_pose(object='pear', action='grasp')\nmove_to_pose(pear_grasp_pose, move_group)\nclose_gripper(gripper_group)\nattach_object('pear')\n\n# Move the pear to the position of the apple\npear_to_apple_pose = parse_pose(object='pear', action='put', position=apple_pos)\nmove_to_pose(pear_to_apple_pose, move_group)\n\n# Release the pear\nopen_gripper(gripper_group)\ndetach_object('pear')",
        "gvars": [
            "np",
            "box",
            "shape",
            "mapping",
            "Point",
            "LineString",
            "Polygon",
            "MultiPoint",
            "MultiLineString",
            "MultiPolygon",
            "GeometryCollection",
            "LinearRing",
            "CAP_STYLE",
            "JOIN_STYLE",
            "affine_transform",
            "rotate",
            "scale",
            "skew",
            "translate",
            "get_bbox",
            "get_obj_pos",
            "get_color",
            "is_obj_visible",
            "denormalize_xy",
            "get_obj_names",
            "get_corner_name",
            "get_side_name",
            "get_ee_pose",
            "parse_pose",
            "open_gripper",
            "close_gripper",
            "move_to_pose",
            "move_joints_to",
            "add_object_to_scene",
            "attach_object",
            "detach_object",
            "say",
            "move_group",
            "gripper_group",
            "parse_obj_name",
            "parse_question",
            "transform_shape_pts",
            "get_obj_positions_np",
            "get_obj_positions"
        ],
        "lvars": []
    }
]